// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using UIKit;
using System.Collections.Generic;
using Mxp.Core.Business;
using System.Linq;

namespace Mxp.iOS
{
	public partial class SettingsViewController : MXPViewController
	{
		public SettingsViewController (IntPtr handle) : base (handle)
		{

		}

		public override void ViewDidLoad ()
		{
			base.ViewDidLoad ();

			this.Title = Labels.GetLoggedUserLabel (Labels.LabelEnum.Settings);

			this.BrowseDesktopVersionButton.Layer.CornerRadius = 4;
			this.BrowseDesktopVersionButton.Layer.BorderWidth = 1;
			this.BrowseDesktopVersionButton.Layer.BorderColor =  UIColor.FromRGB (204, 151, 64).CGColor;
			this.BrowseDesktopVersionButton.SetTitle (Labels.GetLoggedUserLabel (Labels.LabelEnum.Website), UIControlState.Normal);

			this.LogoutButton.Layer.CornerRadius = 4;
			this.LogoutButton.Layer.BorderWidth = 1;
			this.LogoutButton.Layer.BorderColor =  UIColor.FromRGB (35, 46, 62).CGColor;
			this.LogoutButton.SetTitle (Labels.GetLoggedUserLabel (Labels.LabelEnum.Logout), UIControlState.Normal);

			this.IconsLegendButton.SetTitle (Labels.GetLoggedUserLabel (Labels.LabelEnum.IconsLegend), UIControlState.Normal);

			this.VersionLabel.Text = "v." + NSBundle.MainBundle.ObjectForInfoDictionary ("CFBundleShortVersionString").ToString ();
		}


		partial void ClickOnBrowserVersion (UIButton sender)
		{
			UIApplication.SharedApplication.OpenUrl(new NSUrl(LoggedUser.Instance.BrowserLink));
		}

		partial void ClickOnLogout (UIButton sender)
		{
			this.processLogout();
		}

		public void processLogout(){
			try {
				LoggedUser.Instance.Logout ();

				LoginViewController vc = null;

				if (MainNavigationController.Instance.ViewControllers.OfType<LoginViewController> ().Any ()) {
					vc = MainNavigationController.Instance.ViewControllers.Single (uivc => uivc is LoginViewController) as LoginViewController;
					vc.ResetFields ();
					MainNavigationController.Instance.PopToViewController (vc, true);
				} else {
					vc = this.Storyboard.InstantiateViewController ("LoginViewController") as LoginViewController;
					UIViewController[] vcs = new UIViewController [2] {
						MainNavigationController.Instance.ViewControllers [0],
						vc
					};
					MainNavigationController.Instance.SetViewControllers (vcs, true);
				}
			} catch (Exception e) {
				MainNavigationController.Instance.showError (e);
			}
		}
	}
}